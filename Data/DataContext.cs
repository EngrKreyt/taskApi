using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using taskApi.Models;

namespace taskApi.Data
{
    public class DataContext : IdentityDbContext<ApplicationUser>
    {
        public DataContext(DbContextOptions<DataContext> options) : base(options)
        {
        }

        // Define DbSet for each entity
        //public override DbSet<User> Users { get; set; }
        public DbSet<Todo> Todos { get; set; }
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ApplicationUser>()
                .Property(u => u.Id)
                .ValueGeneratedOnAdd(); // Configure Id to be autogenerated on add 1
            modelBuilder.Entity<Todo>()
                .Property(t => t.Id)
                .ValueGeneratedOnAdd(); // Configure Id to be autogenerated on add

            base.OnModelCreating(modelBuilder);
        }

        /*        // Optionally, you can override OnModelCreating method to configure entity relationships
                protected override void OnModelCreating(ModelBuilder modelBuilder)
                {
                    // Configure relationships here if needed
                    modelBuilder.Entity<Todo>()
                        .HasOne(t => t.User)
                        .WithMany(u => u.Todos)
                        .HasForeignKey(t => t.UserId)
                        .OnDelete(DeleteBehavior.Cascade); // Cascade delete if user is deleted
                }*/
    }
}
